[{"D:\\project in making\\gitrepopage\\src\\index.js":"1","D:\\project in making\\gitrepopage\\src\\App.js":"2","D:\\project in making\\gitrepopage\\src\\reportWebVitals.js":"3","D:\\project in making\\gitrepopage\\src\\components\\api\\index.js":"4"},{"size":500,"mtime":1609073707602,"results":"5","hashOfConfig":"6"},{"size":655,"mtime":1611246034302,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1609073707602,"results":"8","hashOfConfig":"6"},{"size":174,"mtime":1611245885885,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"oq49qe",{"filePath":"12","messages":"13","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\project in making\\gitrepopage\\src\\index.js",[],"D:\\project in making\\gitrepopage\\src\\App.js",["18","19","20","21"],"D:\\project in making\\gitrepopage\\src\\reportWebVitals.js",[],"D:\\project in making\\gitrepopage\\src\\components\\api\\index.js",[],{"ruleId":"22","severity":1,"message":"23","line":6,"column":19,"nodeType":"24","messageId":"25","endLine":6,"endColumn":29},{"ruleId":"26","severity":1,"message":"27","line":11,"column":13,"nodeType":"28","endLine":14,"endColumn":4},{"ruleId":"26","severity":1,"message":"29","line":14,"column":6,"nodeType":"24","endLine":14,"endColumn":13},{"ruleId":"26","severity":1,"message":"30","line":14,"column":6,"nodeType":"24","endLine":14,"endColumn":13,"suggestions":"31"},"no-unused-vars","'setbaseUrl' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has a missing dependency: 'baseUrl'. Either include it or remove the dependency array.",["32"],{"desc":"33","fix":"34"},"Update the dependencies array to be: [baseUrl]",{"range":"35","text":"36"},[380,387],"[baseUrl]"]